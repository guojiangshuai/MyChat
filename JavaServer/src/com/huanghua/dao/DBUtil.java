
package com.huanghua.dao;

import com.huanghua.i18n.Resource;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.net.URL;
import java.sql.*;
import java.util.PropertyResourceBundle;

public class DBUtil {

    private static Connection conn = null;

    public DBUtil() {
    }

    public static Connection getConnection() {
        if (conn == null) {
            try {
                URL jdbc = Resource.class.getClassLoader().getResource("jdbc.properties");
                File file = new File(jdbc.toURI());
                InputStream is = new FileInputStream(file);
                PropertyResourceBundle pr = new PropertyResourceBundle(is);
                Class.forName(pr.getString("jdbc.driverClassName"));
                String url = pr.getString("jdbc.url");
                String username = pr.getString("jdbc.username");
                String userpass = pr.getString("jdbc.password");
                conn = DriverManager.getConnection(url, username, userpass);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return conn;
    }

    public static int executeUpdate(String sql) {
        int ret = 0;
        try {
            getConnection();
            conn.setAutoCommit(false);
            Statement stmt = conn.createStatement();
            ret = stmt.executeUpdate(sql);
            conn.commit();
            conn.setAutoCommit(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ret;
    }

    public static ResultSet executeQuery(String sql) {
        ResultSet rs = null;
        try {
            getConnection();
            conn.setAutoCommit(false);
            Statement stmt = conn.createStatement();
            rs = stmt.executeQuery(sql);
            conn.commit();
            conn.setAutoCommit(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return rs;
    }

    /**
     * 得到自动生成的ID
     * 
     * @param sql
     * @param autoGeneratedKeys
     * @return
     */
    public static PreparedStatement pseExcuteQuery(String sql, int autoGeneratedKeys) {
        PreparedStatement ps = null;
        try {
            getConnection();
            ps = conn.prepareStatement(sql, autoGeneratedKeys);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ps;
    }

    public static void closeAll() {
        if (conn != null) {
            try {
                conn.close();
                conn = null;
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public static void close(Connection conn) {
        if (conn != null) {
            try {
                conn.close();
                conn = null;
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public static void close(Statement stmt) {
        if (stmt != null) {
            try {
                stmt.close();
                stmt = null;
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public static void close(ResultSet rs) {
        if (rs != null) {
            try {
                rs.close();
                rs = null;
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    public static void main(String[] args) {
        Connection conn = getConnection();
        close(conn);
    }
}
